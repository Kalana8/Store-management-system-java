/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package supermarket;

import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Group1
 */
public class Cashier extends javax.swing.JFrame {

    /**
     * Creates new form Cashier
     */
    static int counter = 1;

    public Cashier() {
        initComponents();
        Prod.setEditable(false);
        Price.setEditable(false);
        String filePath = "table.txt";
        File file = new File(filePath);
        try {
            BufferedReader br = new BufferedReader(new FileReader(file));

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

            //get Line from txt file
            Object[] tableLines = br.lines().toArray();

            //extract
            for (int i = 0; i < tableLines.length; i++) {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split("/");
                model.addRow(dataRow);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Can not import Data from Txt File(335)");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Prod = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Qty = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        ClearSelling = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        ADDTOBILL = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        BillTxt = new javax.swing.JTextArea();
        PrintButton = new javax.swing.JButton();
        Filter = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Price = new javax.swing.JTextField();
        Log1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(102, 153, 255));

        jPanel2.setBackground(new java.awt.Color(255, 208, 181));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("  BILLING POINT");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("NAME");

        Prod.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Prod.setForeground(new java.awt.Color(0, 102, 204));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("QUANTITY");

        Qty.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Qty.setForeground(new java.awt.Color(0, 102, 204));

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("Search");

        ClearSelling.setBackground(new java.awt.Color(0, 102, 204));
        ClearSelling.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        ClearSelling.setForeground(new java.awt.Color(255, 255, 255));
        ClearSelling.setText("Clear");
        ClearSelling.setBorder(null);
        ClearSelling.setBorderPainted(false);
        ClearSelling.setPreferredSize(new java.awt.Dimension(78, 43));
        ClearSelling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearSellingActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "        ID", "NAME", "PRICE", "QUANTITY", "CATEGORY"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("PRODUCTS LIST");

        ADDTOBILL.setBackground(new java.awt.Color(0, 102, 204));
        ADDTOBILL.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        ADDTOBILL.setForeground(new java.awt.Color(255, 255, 255));
        ADDTOBILL.setText("Add to Bill");
        ADDTOBILL.setBorder(null);
        ADDTOBILL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ADDTOBILLMouseClicked(evt);
            }
        });
        ADDTOBILL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDTOBILLActionPerformed(evt);
            }
        });

        BillTxt.setColumns(20);
        BillTxt.setRows(5);
        jScrollPane2.setViewportView(BillTxt);

        PrintButton.setText("Print");
        PrintButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PrintButtonMouseClicked(evt);
            }
        });
        PrintButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintButtonActionPerformed(evt);
            }
        });

        Filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FilterActionPerformed(evt);
            }
        });
        Filter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                FilterKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("PRICE");

        Price.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Price.setForeground(new java.awt.Color(0, 102, 204));

        Log1.setBackground(new java.awt.Color(153, 153, 153));
        Log1.setFont(new java.awt.Font("Century Gothic", 2, 18)); // NOI18N
        Log1.setForeground(new java.awt.Color(255, 255, 255));
        Log1.setIcon(new javax.swing.ImageIcon("/Users/kalanakavinda/Documents/Icon/Emergency Exit.png")); // NOI18N
        Log1.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        Log1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Log1ActionPerformed(evt);
            }
        });
        Log1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Log1KeyPressed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon("/Users/kalanakavinda/Documents/OOP Assignment/Crush Cosmetics /Icon/Light Pink Salmon Skincare Product Features Instagram Post (1).png")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(285, 285, 285)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Log1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(148, 148, 148))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(Prod, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Qty, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(ADDTOBILL, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ClearSelling, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(PrintButton)
                        .addGap(47, 47, 47))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(136, 136, 136)
                                    .addComponent(jLabel7)
                                    .addGap(18, 18, 18)
                                    .addComponent(Filter, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(35, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Log1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Prod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PrintButton)
                        .addGap(0, 3, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ADDTOBILL)
                            .addComponent(ClearSelling, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ADDTOBILLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDTOBILLActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_ADDTOBILLActionPerformed

    private void Log1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Log1ActionPerformed
        // TODO add your handling code here:
        Login log = new Login();
        log.setVisible(true);
        dispose();

    }//GEN-LAST:event_Log1ActionPerformed

    private void Log1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Log1KeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_Log1KeyPressed
    int count = 0;
    String ID;
    double NetTotal = 0;
    private void ADDTOBILLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ADDTOBILLMouseClicked
        // TODO add your handling code here:
        try {
            int Quantity = Integer.parseInt(Qty.getText());
            if (Quantity <= 0) {
                JOptionPane.showMessageDialog(null, "Enter only positive integer value");
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Enter Only integer value");

        }
        if (Qty.getText().isEmpty() || Prod.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Missing Information");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        ProductManager p = new ProductManager();
        Integer UpdateQty = 0;
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            if (model.getValueAt(i, 0).equals(ID)) {
                UpdateQty = Integer.parseInt(model.getValueAt(i, 3).toString()) - Integer.parseInt(Qty.getText());

                p.setId(model.getValueAt(i, 0).toString().trim());
                p.setName(model.getValueAt(i, 1).toString().trim());
                p.setPrice(model.getValueAt(i, 2).toString().trim());
                p.setQty(model.getValueAt(i, 3).toString().trim());
                p.setCat(model.getValueAt(i, 4).toString().trim());

                if (UpdateQty > 0) {
                    model.setValueAt(UpdateQty, i, 3);
                   break;
                } else {
                    JOptionPane.showMessageDialog(null, "Order can't be placed\nNot enough Quantity!");
                    break;
                }
            }
        }
            
        if (UpdateQty > 0) {
            count++;        
            Total = Double.parseDouble(Price.getText()) * (Double.valueOf(Qty.getText()));
            NetTotal = NetTotal + Total;
            if (count == 1) {
                BillTxt.setText(BillTxt.getText() + "\t Welcome to Crush Cosmetics\n\t************YOUR BILL*************\n" + " ID    \tNAME    \tPRICE    \tQUANTITY    \tTOTAL\n " + " " + count + "      \t" + Prod.getText() + "      \t" + Price.getText() + "         \t" + Qty.getText() + "      \t" + Total + "\n");
            }
            if (count > 1) {
                BillTxt.setText(BillTxt.getText() + " " + count + "      \t" + Prod.getText() + "      \t" + Price.getText() + "         \t" + Qty.getText() + "      \t" + Total + "\n");
            }
            
            DeleteMethod(p.getId());
            AddMethod(p.getId(), p.getName(), p.getPrice(), UpdateQty.toString(), p.getCat());
        }
        Qty.setText("");
        Prod.setText("");
        Price.setText("");
    }//GEN-LAST:event_ADDTOBILLMouseClicked

    private void ClearSellingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearSellingActionPerformed
        // TODO add your handling code here:
        Prod.setText("");
        Price.setText("");
        Qty.setText("");
    }//GEN-LAST:event_ClearSellingActionPerformed
    Double price, Total;


    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        //To get value of Price from Table

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int tableIndex = jTable1.getSelectedRow();
        Prod.setText(model.getValueAt(tableIndex, 1).toString());
        Price.setText(model.getValueAt(tableIndex, 2).toString());
        ID = model.getValueAt(tableIndex, 0).toString();

    }//GEN-LAST:event_jTable1MouseClicked

    private void PrintButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintButtonMouseClicked
        // TODO add your handling code here:
        BillTxt.setText(BillTxt.getText() + "\n\n\t\t\tYOUR TOTAL: " + NetTotal);

        try {
            Thread.sleep(150);
            BillTxt.print();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "can not print the Bill");
        }

    }//GEN-LAST:event_PrintButtonMouseClicked

    private void PrintButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PrintButtonActionPerformed

    private void FilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FilterKeyReleased
        // TODO add your handling code here:
        String query = Filter.getText();
        filter(query);//Method Created at line no 478 
    }//GEN-LAST:event_FilterKeyReleased

    private void FilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FilterActionPerformed

    /**
     * @param args the command line arguments
     */

    private void filter(String query) {
        //Table row sorter for filter
        DefaultTableModel dm = (DefaultTableModel) jTable1.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(dm);
        jTable1.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
    }
// delete the specific line from the txt file
    private void DeleteMethod(String id) {
        String currentString;
        File originalFile = new File("table.txt");
        File tempFile = new File("temp.txt");
        try {
            FileReader fRead = new FileReader(originalFile);
            BufferedReader fReadBuffer = new BufferedReader(fRead);
            FileWriter fWrite = new FileWriter(tempFile);
            BufferedWriter fWriteBuffer = new BufferedWriter(fWrite);

            while ((currentString = fReadBuffer.readLine()) != null) {
                String SpecificId = currentString.substring(0, 5);
                if (SpecificId.equals(id)) {
                    continue;
                }
                fWriteBuffer.write(currentString);
                fWriteBuffer.newLine();
            }
            fWriteBuffer.close();
            fReadBuffer.close();
            originalFile.delete();
            tempFile.renameTo(originalFile);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error in Deleting Data from Txt File(757)");
        }
    }
// Add a line in the file
    private void AddMethod(String id, String name, String price, String qty, String cat) {
        try {
            FileWriter Writer = new FileWriter("table.txt", true);
            Writer.write(id + "/" + name + "/" + price + "/" + qty + "/" + cat);
            Writer.write(System.getProperty("line.separator"));
            Writer.close();


        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Error in Adding Data to Txt File(757)");
     }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ADDTOBILL;
    private javax.swing.JTextArea BillTxt;
    private javax.swing.JButton ClearSelling;
    private javax.swing.JTextField Filter;
    private javax.swing.JButton Log1;
    private javax.swing.JTextField Price;
    private javax.swing.JButton PrintButton;
    private javax.swing.JTextField Prod;
    private javax.swing.JTextField Qty;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}